<?xml version="1.0" encoding="UTF-8"?>
<chapter xml:id="tempel-userguide-introdct" xml:lang="pl" status="DRAFT"
	xmlns="http://docbook.org/xml/5.0/xsd/docbook.xsd" version="5.0"
	xmlns:xl="http://www.w3.org/1999/xlink"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:svg="http://www.w3.org/2000/svg"
	xmlns:m="http://www.w3.org/1998/Math/MathML"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<title>Wstęp</title>
<!--
	<para>Welcome to the getting started with Maven documentation. Congratulations you
	have successfully downloaded and built the example.</para>

	<para>For more details on the Product Name service, please refer to
	<linkxl:href="http://www.rackspacecloud.com/cloud_hosting_products/files"
	>http://www.rackspacecloud.com/cloud_hosting_products/product name</link></para>

	<para>We welcome feedback, comments, and bug reports at
	<linkxl:href="mailto:support@rackspacecloud.com">support@rackspacecloud.com</link>.
	</para>
 -->
	<section>
		<title>Czym jest Tempel?</title>

		<para>Najogólniej mówiąc Tempel jest narzędziem służącym do
		uruchamiania kodu zawartego w klasach nazywanych <emphasis>
		silnikami generatorów</emphasis>. Z założenia kod ten ma za
		zadanie przetworzenie określonego <emphasis>zasobu wejściowego
		</emphasis> (często zwanego również <emphasis>szablonem
		wejściowym</emphasis>) znajdującego się w pewnej <emphasis>
		lokalizacji źródłowej</emphasis> w <emphasis>repozytorium
		szablonów</emphasis>, przygotowanie na jego podstawie <emphasis>
		zasobu wyjściowego</emphasis> i umieszczenie go w określonej
		<emphasis>lokalizacji docelowej</emphasis>.</para>

		<para>Zarówno przetwarzany szablon wejściowy jak i generowany
		zasób wyjściowy mogą być pojedynczymi plikami, katalogami lub
		bardziej złożonymi strukturami składającymi się z wielu katalogów
		zawierających rozmaitego rodzaju pliki. Mogą też być zasobami innego
		typu niż struktury systemu plików.</para>

		<para>W trakcie przetwarzania szablonu wejściowego powiązany z nim
		silnik generatora może wykorzystywać wartości pewnych
		<emphasis>parametrów wejściowych</emphasis>. Informacje o tym jakie
		to są parametry, jakie mają mieć typy, wartości domyślne, wartości
		dopuszczalne, etc., odczytywane są z tzw. <emphasis>definicji
		szablonu</emphasis>. Na jej podstawie, w fazie przygotowania do
		uruchomienia silnika, odbywa się wypełnianie wartości tych parametrów.
		Proces ten nazywany jest <emphasis role="strong-italic">uruchamianiem
		szablonu</emphasis>.</para>
	</section>

	<section>
		<title>Do czego może być wykorzystywany Tempel?</title>

		<para>Tempel uruchamia kod silników generatorów, który z założenia
		ma za zadanie generację pewnych zasobów w oparciu o inne zasoby
		(szablony). Może więc znaleźć zastosowanie wszędzie tam, gdzie
		wymagane jest wielokrotne, często powtarzane tworzenie pewnych
		treści, drzew katalogów czy zestawów plików cechujących się:
		<orderedlist numeration="arabic" spacing="compact">
			<listitem>
				<para>zauważalnym podobieństwem struktury,</para>
			</listitem>
			<listitem>
				<para>na tyle dużą złożonością, że ich ręczne tworzenie
				jest trudne i żmudne,</para>
			</listitem>
			<listitem>
				<para>...</para>
			</listitem>
		</orderedlist></para>

		<para>Tempel został stworzony z zamiarem jego wykorzystania do
		generacji zasobów takich jak projekty programistyczne i ich
		elementy (moduły, zestawy klas, etc.), szablony dokumentacji czy
		strony WWW. Przy takich zastosowaniach generowane pliki są
		przeważnie plikami tekstowymi w różnych formatach
		(<filename>txt</filename>, <filename>java</filename>,
		<filename>xml</filename>, <filename>html</filename>, ...)
		tworzonymi poprzez wypełnienie szablonów <link xl:href=
		"http://velocity.apache.org/">Apache Velocity</link>, lub prostymi
		plikami binarnymi (np. grafikami <filename>jpg</filename>,
		<filename>png</filename>, ...) kopiowanymi ze struktur zasobu
		wejściowego do lokalizacji docelowej. Nic jednak nie stoi na
		przeszkodzie, aby Tempel był używany do generowania zasobów
		binarnych (jak np. archiwa <filename>zip</filename>, czy dokumenty
		w formacie <filename>pdf</filename>). Wymagane jest jedynie
		dostarczenie odpowiedniego (dedykowanego) silnika generacji.</para>
	</section>

	<section>
		<title>Wymagania</title>

		<para>Tempel jest uruchamiany w środowisku maszyny wirtualnej
		<link xl:href="http://www.java.com/">Java</link>. Dlatego do
		jego działania konieczna jest jej obecność w systemie operacyjnym.
		Minimalna wymagana wersja maszyny Java to 1.6.</para>
	</section>

	<section>
		<title>Instalacja</title>

		<para>Instalacja narzędzia agiso.org Tempel sprowadza się do jego
		pobrania spod adresu <link xl:href="ftp://agiso.org/pub/tempel/">
		ftp://agiso.org/pub/tempel/</link>, rozpakowania w dogodnym
		miejscu oraz dodania powstałego katalogu <filename>bin</filename>
		do ścieżki uruchomieniowej systemu operacyjnego<footnote><para>
		Dodanie katalogu <filename>bin</filename> do ścieżki uruchomieniowej
		nie jest wymagane do poprawnego działania narzędzia Tempel. Pozwala
		jednak na wygodne wywoływanie polecenia <command>tpl</command> w
		konsoli systemowej niezależnie od jego lokalizacji w systemie plików.
		</para></footnote>. Najnowsza wersja Tempel jest zawsze udostępniana
		pod nazwą
		<link xl:href="ftp://agiso.org/pub/tempel/tempel-current.zip">
		tempel-current.zip</link> (lub
		<link xl:href="ftp://agiso.org/pub/tempel/tempel-current.tar.gz">
		tempel-current.tar.gz</link>).</para>

		<para>W wyniku rozpakowania archiwum dystrybucyjnego w lokalizacji
		docelowej powstaje następującastruktura katalogów i plików:
<screen>tempel
├── bin
│   ├── <filename>tpl.bat</filename>
│   └── <filename>tpl.sh</filename>
├── repo
│   ├── org.agiso.tempel.api.jar
│   ├── org.agiso.tempel.core.jar
│   ├── org.agiso.tempel.exts.jar
│   ├── org.agiso.tempel.core.support.maven.jar
│   ├── org.agiso.tempel.starter.jar
│   └── ...
├── conf
│   ├── tempel.xml
│   └── maven.xml
└── repository
    └── ...</screen></para>

		<para>Katalog <filename>bin</filename> zawiera skrypty powłoki
		umożliwiające uruchomienie narzędzia w środowiku Windows (plik
		<filename>tpl.bat</filename>) oraz Linux
		(<filename>tpl.sh</filename>).</para>

		<para>Katalog <filename>repo</filename> przechowuje wszystkie
		biblioteki <filename>jar</filename> progamu Tempel oraz
		biblioteki wymagane do jego działania.</para>

		<para>Katalogi <filename>conf</filename> i
		<filename>repository</filename> stanowią aplikacyjne
		(instalacyjne) repozytorium szablonów. W pierwszym z nich znajduje
		się plik <filename>tempel.xml</filename> z konfiguracją globalną i
		definicjami szablonów. W drugim przechowywane są zasoby tych
		szablonów.</para>

		<para>Plik <filename>maven.xml</filename> wykorzystywany jest do
		konfiguracji mechanizmu wyszukiwania szablonów w repozytoriach
		<link xl:href="http://maven.org/">Apache Maven</link>.</para>
	</section>

	<section>
		<title>Konfiguracja</title>

		<section>
			<title>Poziomy konfiguracji</title>

			<para>Konfiguracja narzędzia tempel odbywa się poprzez edycję
			<emphasis>plików konfiguracyjnych</emphasis> na <emphasis>poziomie
			globalnym</emphasis> (w katalogu gdzie Tempel został
			zainstalowany) oraz na <emphasis>poziomie użytkownika</emphasis>
			(w katalogu domowym użytkownika). Dodatkowo szablony lokalne
			definiuje się na <emphasis>poziomie uruchomieniowym</emphasis> w
			katalogu bieżącym, w którym następuje uruchomienie narzędzia.
			</para>

			<para>Mechanizm konfiguracji obejmujący wiele <emphasis>poziomów
			konfiguracyjnych</emphasis> powoduje, że konfiguracja brana pod
			uwagę w trakcie uruchamiania szablonu jest dynamicznie wyznaczana
			dopiero po wywołaniu polecenia <command>tpl</command>.
			Najwyższy priorytet ma <emphasis>konfiguracja
			uruchomieniowa</emphasis>, następnie <emphasis>konfiguracja
			użytkownika</emphasis>, i ostatecznie - <emphasis>konfiguracja
			globalna</emphasis>. Oznacza to, że ustawienia (oraz szablony)
			globalne mogą zostać przedefiniowane na poziomie użytkownika, a
			te z kolei na poziomie uruchomieniowym.</para>
		</section>

		<section>
			<title>Pliki konfiguracyjne</title>

			<para>Podstawowa konfiguracja agiso.org Tempel na poszcególnych
			poziomach odbywa się przez edycję następujących plików
			<filename>xml</filename>:
			<orderedlist numeration="arabic" spacing="normal">
				<listitem>
					<para>Poziom globalny:
					<itemizedlist spacing="compact">
						<listitem>
							<para><filename>/katalog/instalacyjny/tempel/conf/tempel.xml</filename></para>
						</listitem>
						<listitem>
							<para><filename>/katalog/instalacyjny/tempel/conf/maven.xml</filename></para>
						</listitem>
					</itemizedlist></para>
				</listitem>
				<listitem>
					<para>Poziom użytkownika:
					<itemizedlist spacing="compact">
						<listitem>
							<para><filename>/katalog/domowy/użytkownika/.tempel/tempel.xm</filename></para>
						</listitem>
					</itemizedlist></para>
				</listitem>
				<listitem>
					<para>Poziom uruchomienowy:
					<itemizedlist spacing="compact">
						<listitem>
							<para><filename>./tempel.xml</filename> (w katalogu bieżącym
							(uruchomienia polecenia <command>tpl</command>))</para>
						</listitem>
					</itemizedlist></para>
				</listitem>
			</orderedlist></para>

			<para>Pliki <filename>tempel.xml</filename> występują na każdym
			poziomie konfiguracyjnym. Zawierają właściwą konfigurację i przechowują
			definicje szablonów z poziomu.</para>

			<para>Struktura plików <filename>tempel.xml</filename>
			została szczegółowo przedstawiona w TODO.</para>

			<para>Plik <filename>maven.xml</filename> występuje jedynie na poziomie
			globalnym i wykorzystywany jest do konfiguracji sposobu współpracy
			narzędzia Tempel z repozytoriami Apache Maven.</para>
		</section>
	</section>

	<section>
		<title>Uruchamianie</title>

		<para>Uruchamianie i używanie narzędzia Tempel odbywa się z
		poziomu linii komend systemu operacyjnego i polega na wywoływaniu
		polecenia <command>tpl</command> z odpowiednimi przełącznikami. W
		większości przypadków i przy normalnym użytkowaniu, gdy wywołanie
		ma na celu wykonanie szablonu w trybie interaktywnym, określenie
		parametrów linii komend sprowadza się jedynie do wskazania szablonu
		do uruchomienia (przez podanie jego identifikatora bądź pełnej nazwy
		szablonu) i przyjmuje jedną z postaci:
		<screen>
			<prompt>#</prompt> <userinput>tpl <command>idSzablonu</command></userinput>
			<prompt>#</prompt> <userinput>tpl <command>groupId:tempateId:version</command></userinput>
		</screen>
		gdzie <command>idSzablonu</command> jest opcjonalnym, unikatowym
		identyfikatorem szablonu w repozytorium lokalnym bądź użytkownika,
		natomiast <command>groupId</command>, <command>templateId</command>
		i <command>version</command> stanowią jednoznaczne wskazanie szablonu
		w dowolnym typie repozytorium (TODO z uwzględnieniem kolejności
		przeszukiwania repozytoriów i mechanizmu przedefiniowywania szablonów).
		</para>
	</section>
</chapter>