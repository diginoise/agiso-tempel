<?xml version="1.0" encoding="UTF-8"?>
<book xml:id="tempel-userguide" xml:lang="pl" status="DRAFT"
	xmlns="http://docbook.org/xml/5.0/xsd/docbook.xsd" version="5.0"
	xmlns:xl="http://www.w3.org/1999/xlink"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:svg="http://www.w3.org/2000/svg"
	xmlns:m="http://www.w3.org/1998/Math/MathML"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<info>
		<title>agiso.org Tempel</title>
		<subtitle>Podręcznik użytkownika</subtitle>
		<biblioid class="isbn">978-0-596-8050-2-9</biblioid>
		<!-- pagenums></pagenums>
		<pubdate></pubdate>
		<edition></edition>
		<isbn>?-?????-???-?</isbn>
		<productname></productname -->

		<authorgroup>
			<author>
				<personname>
					<firstname>Karol</firstname>
					<surname>Kopacz</surname>
				</personname>
				<!-- affiliation>
					<orgname></orgname>
				</affiliation -->
			</author>
		</authorgroup>

		<publisher>
			<publishername>Publishername</publishername>
			<address><city>City</city></address>
		</publisher>
		<editor>
			<personname>
				<firstname>Karol</firstname>
				<surname>Kopacz</surname>
			</personname>
		</editor>
		<copyright>
			<year>2013</year>
			<holder>Karol Kopacz</holder>
		</copyright>
		<releaseinfo>Wersja 130227</releaseinfo>

		<revhistory>
			<revision>
				<revnumber>0.91</revnumber>
				<date>1996-12-11</date>
				<authorinitials>ndw</authorinitials>
				<revremark>Bug fixes</revremark>
			</revision>
			<revision>
				<revnumber>0.90</revnumber>
				<date>1996-11-30</date>
				<authorinitials>ndw</authorinitials>
				<revremark>First beta release</revremark>
			</revision>
		</revhistory>
		<legalnotice>
			<para>Copies of this document may be made for your own use and
			for distribution to others, provided that you do not charge any
			fee for such copies and further provided that each copy contains
			this Copyright Notice, whether distributed in print or
			electronically.</para>
		</legalnotice>

		<!-- cover>
			<para>this is a placeholder for the front cover</para>
		</cover>
		<cover>
			<para>this is a placeholder for the back cover</para>
		</cover -->

		<abstract>
			<para>Abstrakt ...</para>

			<informaltable rules="all">
				<thead>
					<tr>
						<td align="center" colspan="1">Revision Date</td>
						<td align="center" colspan="4">Summary of Changes</td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td colspan="1" align="center">July. 14, 2011</td>
						<td colspan="4">
							<itemizedlist spacing="compact">
								<listitem>
									<para>Initial document creation.</para>
								</listitem>
							</itemizedlist>
						</td>
					</tr>
				</tbody>
			</informaltable>
		</abstract>
		
	</info>

	<preface>
		<title>Przedmowa</title>

		<para>...</para>
	</preface>

	<part xml:id="tempel-overview">
		<title>Przegląd agiso.org Tempel</title>

		<partintro>
			<para>...</para>
		</partintro>

		<xi:include href="chapters/introdct.xml" />

		<xi:include href="chapters/templats.xml" />

		<xi:include href="chapters/reposits.xml" />
	</part>

	<part xml:id="tempel-usage">
		<title>Wykorzystanie agiso.org Tempel</title>

		<partintro>
			<para>...</para>
		</partintro>

		<chapter>
			<title>...</title>
		</chapter>
	</part>

	<part xml:id="tempel-apndxes">
		<title>Dodatki</title>

		<partintro>
			<para>...</para>
		</partintro>

		<appendix>
			<title>Parametry wbudowane</title>

		</appendix>

		<appendix>
			<title>Interfejs linii komend (CLI)</title>

		</appendix>

		<xi:include href="chapters/stdengs.xml" />

		<xi:include href="chapters/dictnry.xml" />
	</part>



	<part xml:id="tempel-docbook">
		<title>Docbook</title>

		<appendix>
			<title>Elementy docbook</title>

			<table>
				<title>The bean definition</title>

				<tgroup cols="2">
					<colspec colname="c1" colwidth="2*"/>
					<colspec colname="c2" colwidth="4*"/>
					<thead>
						<row>
							<entry>Property</entry>
							<entry>Explained in...</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>class</entry>
							<entry>
								<para><xref linkend="beans-factory-class"/></para>
							</entry>
						</row>
						<row>
							<entry>name</entry>
							<entry>
								<para><xref linkend="beans-beanname"/></para>
							</entry>
						</row>
					</tbody>
				</tgroup>
			</table>

			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="images/container-magic.png"
						format="PNG" width="250" />
				</imageobject>

				<caption><para>The Spring IoC container</para></caption>
			</mediaobject>

			<note>
				<para>It is possible, but not recommended, to reference files in
				parent directories using a relative "../" path. Doing so creates a
				dependency on a file that is outside the current application. In
				particular, this reference is not recommended for "classpath:" URLs
				(for example, "classpath:../services.xml"), where the runtime
				resolution process chooses the "nearest" classpath root and then
				looks into its parent directory. Classpath configuration changes may
				lead to the choice of a different, incorrect directory.</para>

				<para>You can always use fully qualified resource locations instead of
				relative paths: for example, "file:C:/config/services.xml" or
				"classpath:/config/services.xml". However, be aware that you are
				coupling your application's configuration to specific absolute
				locations. It is generally preferable to keep an indirection for
				such absolute locations, for example, through "${...}" placeholders
				that are resolved against JVM system properties at runtime.</para>
			</note>

			<sidebar>
				<title>Bean naming conventions</title>

				<para>The convention is to use the standard Java convention for instance
				field names when naming beans. That is, bean names start with a
				lowercase letter, and are camel-cased from then on. Examples of such
				names would be (without quotes) <literal>'accountManager'</literal>,
				<literal>'accountService'</literal>, <literal>'userDao'</literal>,
				<literal>'loginController'</literal>, and so forth.</para>

				<para>Naming beans consistently makes your configuration easier to read
				and understand, and if you are using Spring AOP it helps a lot when
				applying advice to a set of beans related by name.</para>
			</sidebar>

			<para>To explicitly register a <classname>BeanFactoryPostProcessor</classname>
			when using a <interfacename>BeanFactory</interfacename> implementation, you must
			write code like this:</para>

			<programlisting language="java">ConfigurableBeanFactory factory = new XmlBeanFactory(...);
				<lineannotation>// now register any needed BeanPostProcessor instances</lineannotation>
				MyBeanPostProcessor postProcessor = new MyBeanPostProcessor();
				factory.addBeanPostProcessor(postProcessor);

				<lineannotation>// now start using the factory</lineannotation>
			</programlisting>
		</appendix>
	</part>
</book>
